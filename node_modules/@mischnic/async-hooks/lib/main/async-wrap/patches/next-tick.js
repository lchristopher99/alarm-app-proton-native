"use strict";
exports.__esModule = true;
var NextTickWrap = (function () {
    function NextTickWrap() {
    }
    return NextTickWrap;
}());
function patchNextTick(hooks, state) {
    var oldNextTick = process.nextTick;
    process.nextTick = function tick() {
        if (!state.enabled) {
            return oldNextTick.apply(process, arguments);
        }
        var args = Array.from(arguments);
        var callback = args[0];
        if (typeof callback !== 'function') {
            throw new TypeError('callback is not a function');
        }
        var handle = new NextTickWrap();
        var asyncId = state.getNextId();
        hooks.init(asyncId, 'NextTick', state.currentId, handle);
        args[0] = function () {
            hooks.pre(asyncId);
            var didThrow = true;
            try {
                callback.apply(this, arguments);
                didThrow = false;
            }
            finally {
                if (didThrow && process.listenerCount('uncaughtException') > 0) {
                    process.once('uncaughtException', function () {
                        hooks.post(asyncId, true);
                        hooks.destroy(asyncId);
                    });
                }
            }
            hooks.post(asyncId, false);
            hooks.destroy(asyncId);
        };
        return oldNextTick.apply(process, args);
    };
}
exports.patchNextTick = patchNextTick;
//# sourceMappingURL=next-tick.js.map