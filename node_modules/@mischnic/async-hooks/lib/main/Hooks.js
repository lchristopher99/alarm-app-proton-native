"use strict";
exports.__esModule = true;
function createHooks(state) {
    var hooks = [];
    return {
        init: function (asyncId, provider, parentId, parentHandle) {
            state.childToParent.set(asyncId, parentId);
            for (var _i = 0, hooks_1 = hooks; _i < hooks_1.length; _i++) {
                var hook = hooks_1[_i];
                hook.init(asyncId, provider, parentId, parentHandle);
            }
        },
        pre: function (asyncId) {
            state.previousIds.push(state.currentId);
            state.currentId = asyncId;
            state.parentId = state.childToParent.get(asyncId) || 0;
            for (var _i = 0, hooks_2 = hooks; _i < hooks_2.length; _i++) {
                var hook = hooks_2[_i];
                hook.before(state.currentId);
            }
        },
        post: function (asyncId, didThrow) {
            state.currentId = state.previousIds.pop() || 0;
            state.parentId = state.childToParent.get(state.currentId) || 0;
            for (var _i = 0, hooks_3 = hooks; _i < hooks_3.length; _i++) {
                var hook = hooks_3[_i];
                hook.after(asyncId);
            }
        },
        destroy: function (asyncId) {
            state.childToParent["delete"](asyncId);
            for (var _i = 0, hooks_4 = hooks; _i < hooks_4.length; _i++) {
                var hook = hooks_4[_i];
                hook.destroy(asyncId);
            }
        },
        add: function (hook) {
            hooks.push(hook);
        },
        remove: function (hook) {
            hooks = hooks.filter(function (next) { return next !== hook; });
        }
    };
}
exports.createHooks = createHooks;
//# sourceMappingURL=Hooks.js.map