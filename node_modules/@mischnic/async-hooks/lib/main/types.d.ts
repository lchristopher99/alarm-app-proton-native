export interface AsyncHooks {
    createHook(options: IHookCallbacks): IAsyncHook;
    executionAsyncId(): number;
    currentId(): number;
    triggerAsyncId(): number;
    triggerId(): number;
}
export declare type InitCallback = (asyncId: number, type: string, triggerAsyncId: number, resource: object) => void;
export declare type BeforeCallback = (asyncId: number) => void;
export declare type AfterCallback = (asyncId: number) => void;
export declare type PromiseCallback = (asyncId: number) => void;
export declare type DestroyCallback = (asyncId: number) => void;
export interface IHookCallbacks {
    init?: InitCallback;
    before?: BeforeCallback;
    after?: AfterCallback;
    promiseResolve?: PromiseCallback;
    destroy?: DestroyCallback;
}
export interface IAsyncHook {
    enable(): this;
    disable(): this;
}
