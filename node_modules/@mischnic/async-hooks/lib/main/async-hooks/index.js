"use strict";
exports.__esModule = true;
var patches_1 = require("./patches");
function startAsyncHooks(hooks, state) {
    var async_hooks = require('async_hooks');
    for (var _i = 0, _a = Object.keys(patches_1.patches); _i < _a.length; _i++) {
        var key = _a[_i];
        patches_1.patches[key](hooks, state);
    }
    var ignoreUIDs = new Set();
    var idMap = new Map();
    async_hooks.createHook({
        init: function (uid, type, triggerId, resource) {
            if (type === 'PROMISE') {
                ignoreUIDs.add(uid);
            }
            else {
                var asyncId = state.getNextId();
                var parentId = state.currentId;
                idMap.set(uid, asyncId);
                hooks.init(asyncId, type, parentId, resource);
            }
        },
        before: function (uid) {
            if (!ignoreUIDs.has(uid)) {
                var asyncId = idMap.get(uid);
                if (asyncId !== undefined) {
                    hooks.pre(asyncId);
                }
            }
        },
        after: function (uid) {
            if (!ignoreUIDs.has(uid)) {
                var asyncId = idMap.get(uid);
                if (asyncId !== undefined) {
                    hooks.post(asyncId, false);
                }
            }
        },
        destroy: function (uid) {
            if (ignoreUIDs.has(uid)) {
                ignoreUIDs["delete"](uid);
            }
            else if (idMap.has(uid)) {
                var asyncId = idMap.get(uid);
                if (asyncId !== undefined) {
                    idMap["delete"](uid);
                    hooks.destroy(asyncId);
                }
            }
        }
    }).enable();
}
exports.startAsyncHooks = startAsyncHooks;
//# sourceMappingURL=index.js.map